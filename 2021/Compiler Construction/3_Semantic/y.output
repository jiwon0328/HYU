Terminals which are not used

   ERROR


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl_list decl
    3          | decl

    4 decl: var_decl
    5     | func_decl

    6 var_decl: type_spec id SEMI
    7         | type_spec id LBRACE num RBRACE SEMI

    8 id: ID

    9 num: NUM

   10 type_spec: INT
   11          | VOID

   12 func_decl: type_spec id LPAREN params RPAREN comp_stmt

   13 params: param_list
   14       | VOID

   15 param_list: param_list COMMA param
   16           | param

   17 param: type_spec id
   18      | type_spec id LBRACE RBRACE

   19 comp_stmt: LCURLY local_decl stmt_list RCURLY

   20 local_decl: local_decl var_decl
   21           | /* empty */

   22 stmt_list: stmt_list stmt
   23          | /* empty */

   24 stmt: exp_stmt
   25     | comp_stmt
   26     | selec_stmt
   27     | iter_stmt
   28     | return_stmt

   29 exp_stmt: expression SEMI
   30         | SEMI

   31 selec_stmt: IF LPAREN expression RPAREN stmt
   32           | IF LPAREN expression RPAREN stmt ELSE stmt

   33 iter_stmt: WHILE LPAREN expression RPAREN stmt

   34 return_stmt: RETURN SEMI
   35            | RETURN expression SEMI

   36 expression: var ASSIGN expression
   37           | simpl_exp

   38 var: id
   39    | id LBRACE expression RBRACE

   40 simpl_exp: addi_exp relop addi_exp
   41          | addi_exp

   42 relop: LE
   43      | LT
   44      | GT
   45      | GE
   46      | EQ
   47      | NE

   48 addi_exp: addi_exp addop term
   49         | term

   50 addop: PLUS
   51      | MINUS

   52 term: term mulop factor
   53     | factor

   54 mulop: TIMES
   55      | OVER

   56 factor: LPAREN expression RPAREN
   57       | var
   58       | call
   59       | NUM

   60 call: id LPAREN args RPAREN

   61 args: arg_list
   62     | /* empty */

   63 arg_list: arg_list COMMA expression
   64         | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 31 32
ELSE (259) 32
WHILE (260) 33
RETURN (261) 34 35
INT (262) 10
VOID (263) 11 14
ID (264) 8
NUM (265) 9 59
PLUS (266) 50
MINUS (267) 51
TIMES (268) 54
OVER (269) 55
SEMI (270) 6 7 29 30 34 35
COMMA (271) 15 63
LPAREN (272) 12 31 32 33 56 60
RPAREN (273) 12 31 32 33 56 60
LBRACE (274) 7 18 39
RBRACE (275) 7 18 39
LCURLY (276) 19
RCURLY (277) 19
ASSIGN (278) 36
EQ (279) 46
NE (280) 47
LT (281) 43
LE (282) 42
GT (283) 44
GE (284) 45
ERROR (285)


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1, on right: 0
decl_list (33)
    on left: 2 3, on right: 1 2
decl (34)
    on left: 4 5, on right: 2 3
var_decl (35)
    on left: 6 7, on right: 4 20
id (36)
    on left: 8, on right: 6 7 12 17 18 38 39 60
num (37)
    on left: 9, on right: 7
type_spec (38)
    on left: 10 11, on right: 6 7 12 17 18
func_decl (39)
    on left: 12, on right: 5
params (40)
    on left: 13 14, on right: 12
param_list (41)
    on left: 15 16, on right: 13 15
param (42)
    on left: 17 18, on right: 15 16
comp_stmt (43)
    on left: 19, on right: 12 25
local_decl (44)
    on left: 20 21, on right: 19 20
stmt_list (45)
    on left: 22 23, on right: 19 22
stmt (46)
    on left: 24 25 26 27 28, on right: 22 31 32 33
exp_stmt (47)
    on left: 29 30, on right: 24
selec_stmt (48)
    on left: 31 32, on right: 26
iter_stmt (49)
    on left: 33, on right: 27
return_stmt (50)
    on left: 34 35, on right: 28
expression (51)
    on left: 36 37, on right: 29 31 32 33 35 36 39 56 63 64
var (52)
    on left: 38 39, on right: 36 57
simpl_exp (53)
    on left: 40 41, on right: 37
relop (54)
    on left: 42 43 44 45 46 47, on right: 40
addi_exp (55)
    on left: 48 49, on right: 40 41 48
addop (56)
    on left: 50 51, on right: 48
term (57)
    on left: 52 53, on right: 48 49 52
mulop (58)
    on left: 54 55, on right: 52
factor (59)
    on left: 56 57 58 59, on right: 52 53
call (60)
    on left: 60, on right: 58
args (61)
    on left: 61 62, on right: 60
arg_list (62)
    on left: 63 64, on right: 61 63


state 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program    go to state 3
    decl_list  go to state 4
    decl       go to state 5
    var_decl   go to state 6
    type_spec  go to state 7
    func_decl  go to state 8


state 1

   10 type_spec: INT .

    $default  reduce using rule 10 (type_spec)


state 2

   11 type_spec: VOID .

    $default  reduce using rule 11 (type_spec)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 9


state 4

    1 program: decl_list .
    2 decl_list: decl_list . decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    decl       go to state 10
    var_decl   go to state 6
    type_spec  go to state 7
    func_decl  go to state 8


state 5

    3 decl_list: decl .

    $default  reduce using rule 3 (decl_list)


state 6

    4 decl: var_decl .

    $default  reduce using rule 4 (decl)


state 7

    6 var_decl: type_spec . id SEMI
    7         | type_spec . id LBRACE num RBRACE SEMI
   12 func_decl: type_spec . id LPAREN params RPAREN comp_stmt

    ID  shift, and go to state 11

    id  go to state 12


state 8

    5 decl: func_decl .

    $default  reduce using rule 5 (decl)


state 9

    0 $accept: program $end .

    $default  accept


state 10

    2 decl_list: decl_list decl .

    $default  reduce using rule 2 (decl_list)


state 11

    8 id: ID .

    $default  reduce using rule 8 (id)


state 12

    6 var_decl: type_spec id . SEMI
    7         | type_spec id . LBRACE num RBRACE SEMI
   12 func_decl: type_spec id . LPAREN params RPAREN comp_stmt

    SEMI    shift, and go to state 13
    LPAREN  shift, and go to state 14
    LBRACE  shift, and go to state 15


state 13

    6 var_decl: type_spec id SEMI .

    $default  reduce using rule 6 (var_decl)


state 14

   12 func_decl: type_spec id LPAREN . params RPAREN comp_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 16

    type_spec   go to state 17
    params      go to state 18
    param_list  go to state 19
    param       go to state 20


state 15

    7 var_decl: type_spec id LBRACE . num RBRACE SEMI

    NUM  shift, and go to state 21

    num  go to state 22


state 16

   11 type_spec: VOID .
   14 params: VOID .

    RPAREN    reduce using rule 14 (params)
    $default  reduce using rule 11 (type_spec)


state 17

   17 param: type_spec . id
   18      | type_spec . id LBRACE RBRACE

    ID  shift, and go to state 11

    id  go to state 23


state 18

   12 func_decl: type_spec id LPAREN params . RPAREN comp_stmt

    RPAREN  shift, and go to state 24


state 19

   13 params: param_list .
   15 param_list: param_list . COMMA param

    COMMA  shift, and go to state 25

    $default  reduce using rule 13 (params)


state 20

   16 param_list: param .

    $default  reduce using rule 16 (param_list)


state 21

    9 num: NUM .

    $default  reduce using rule 9 (num)


state 22

    7 var_decl: type_spec id LBRACE num . RBRACE SEMI

    RBRACE  shift, and go to state 26


state 23

   17 param: type_spec id .
   18      | type_spec id . LBRACE RBRACE

    LBRACE  shift, and go to state 27

    $default  reduce using rule 17 (param)


state 24

   12 func_decl: type_spec id LPAREN params RPAREN . comp_stmt

    LCURLY  shift, and go to state 28

    comp_stmt  go to state 29


state 25

   15 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_spec  go to state 17
    param      go to state 30


state 26

    7 var_decl: type_spec id LBRACE num RBRACE . SEMI

    SEMI  shift, and go to state 31


state 27

   18 param: type_spec id LBRACE . RBRACE

    RBRACE  shift, and go to state 32


state 28

   19 comp_stmt: LCURLY . local_decl stmt_list RCURLY

    $default  reduce using rule 21 (local_decl)

    local_decl  go to state 33


state 29

   12 func_decl: type_spec id LPAREN params RPAREN comp_stmt .

    $default  reduce using rule 12 (func_decl)


state 30

   15 param_list: param_list COMMA param .

    $default  reduce using rule 15 (param_list)


state 31

    7 var_decl: type_spec id LBRACE num RBRACE SEMI .

    $default  reduce using rule 7 (var_decl)


state 32

   18 param: type_spec id LBRACE RBRACE .

    $default  reduce using rule 18 (param)


state 33

   19 comp_stmt: LCURLY local_decl . stmt_list RCURLY
   20 local_decl: local_decl . var_decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 23 (stmt_list)

    var_decl   go to state 34
    type_spec  go to state 35
    stmt_list  go to state 36


state 34

   20 local_decl: local_decl var_decl .

    $default  reduce using rule 20 (local_decl)


state 35

    6 var_decl: type_spec . id SEMI
    7         | type_spec . id LBRACE num RBRACE SEMI

    ID  shift, and go to state 11

    id  go to state 37


state 36

   19 comp_stmt: LCURLY local_decl stmt_list . RCURLY
   22 stmt_list: stmt_list . stmt

    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    SEMI    shift, and go to state 42
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 28
    RCURLY  shift, and go to state 44

    id           go to state 45
    comp_stmt    go to state 46
    stmt         go to state 47
    exp_stmt     go to state 48
    selec_stmt   go to state 49
    iter_stmt    go to state 50
    return_stmt  go to state 51
    expression   go to state 52
    var          go to state 53
    simpl_exp    go to state 54
    addi_exp     go to state 55
    term         go to state 56
    factor       go to state 57
    call         go to state 58


state 37

    6 var_decl: type_spec id . SEMI
    7         | type_spec id . LBRACE num RBRACE SEMI

    SEMI    shift, and go to state 13
    LBRACE  shift, and go to state 15


state 38

   31 selec_stmt: IF . LPAREN expression RPAREN stmt
   32           | IF . LPAREN expression RPAREN stmt ELSE stmt

    LPAREN  shift, and go to state 59


state 39

   33 iter_stmt: WHILE . LPAREN expression RPAREN stmt

    LPAREN  shift, and go to state 60


state 40

   34 return_stmt: RETURN . SEMI
   35            | RETURN . expression SEMI

    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    SEMI    shift, and go to state 61
    LPAREN  shift, and go to state 43

    id          go to state 45
    expression  go to state 62
    var         go to state 53
    simpl_exp   go to state 54
    addi_exp    go to state 55
    term        go to state 56
    factor      go to state 57
    call        go to state 58


state 41

   59 factor: NUM .

    $default  reduce using rule 59 (factor)


state 42

   30 exp_stmt: SEMI .

    $default  reduce using rule 30 (exp_stmt)


state 43

   56 factor: LPAREN . expression RPAREN

    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    LPAREN  shift, and go to state 43

    id          go to state 45
    expression  go to state 63
    var         go to state 53
    simpl_exp   go to state 54
    addi_exp    go to state 55
    term        go to state 56
    factor      go to state 57
    call        go to state 58


state 44

   19 comp_stmt: LCURLY local_decl stmt_list RCURLY .

    $default  reduce using rule 19 (comp_stmt)


state 45

   38 var: id .
   39    | id . LBRACE expression RBRACE
   60 call: id . LPAREN args RPAREN

    LPAREN  shift, and go to state 64
    LBRACE  shift, and go to state 65

    $default  reduce using rule 38 (var)


state 46

   25 stmt: comp_stmt .

    $default  reduce using rule 25 (stmt)


state 47

   22 stmt_list: stmt_list stmt .

    $default  reduce using rule 22 (stmt_list)


state 48

   24 stmt: exp_stmt .

    $default  reduce using rule 24 (stmt)


state 49

   26 stmt: selec_stmt .

    $default  reduce using rule 26 (stmt)


state 50

   27 stmt: iter_stmt .

    $default  reduce using rule 27 (stmt)


state 51

   28 stmt: return_stmt .

    $default  reduce using rule 28 (stmt)


state 52

   29 exp_stmt: expression . SEMI

    SEMI  shift, and go to state 66


state 53

   36 expression: var . ASSIGN expression
   57 factor: var .

    ASSIGN  shift, and go to state 67

    $default  reduce using rule 57 (factor)


state 54

   37 expression: simpl_exp .

    $default  reduce using rule 37 (expression)


state 55

   40 simpl_exp: addi_exp . relop addi_exp
   41          | addi_exp .
   48 addi_exp: addi_exp . addop term

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    EQ     shift, and go to state 70
    NE     shift, and go to state 71
    LT     shift, and go to state 72
    LE     shift, and go to state 73
    GT     shift, and go to state 74
    GE     shift, and go to state 75

    $default  reduce using rule 41 (simpl_exp)

    relop  go to state 76
    addop  go to state 77


state 56

   49 addi_exp: term .
   52 term: term . mulop factor

    TIMES  shift, and go to state 78
    OVER   shift, and go to state 79

    $default  reduce using rule 49 (addi_exp)

    mulop  go to state 80


state 57

   53 term: factor .

    $default  reduce using rule 53 (term)


state 58

   58 factor: call .

    $default  reduce using rule 58 (factor)


state 59

   31 selec_stmt: IF LPAREN . expression RPAREN stmt
   32           | IF LPAREN . expression RPAREN stmt ELSE stmt

    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    LPAREN  shift, and go to state 43

    id          go to state 45
    expression  go to state 81
    var         go to state 53
    simpl_exp   go to state 54
    addi_exp    go to state 55
    term        go to state 56
    factor      go to state 57
    call        go to state 58


state 60

   33 iter_stmt: WHILE LPAREN . expression RPAREN stmt

    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    LPAREN  shift, and go to state 43

    id          go to state 45
    expression  go to state 82
    var         go to state 53
    simpl_exp   go to state 54
    addi_exp    go to state 55
    term        go to state 56
    factor      go to state 57
    call        go to state 58


state 61

   34 return_stmt: RETURN SEMI .

    $default  reduce using rule 34 (return_stmt)


state 62

   35 return_stmt: RETURN expression . SEMI

    SEMI  shift, and go to state 83


state 63

   56 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 84


state 64

   60 call: id LPAREN . args RPAREN

    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    LPAREN  shift, and go to state 43

    $default  reduce using rule 62 (args)

    id          go to state 45
    expression  go to state 85
    var         go to state 53
    simpl_exp   go to state 54
    addi_exp    go to state 55
    term        go to state 56
    factor      go to state 57
    call        go to state 58
    args        go to state 86
    arg_list    go to state 87


state 65

   39 var: id LBRACE . expression RBRACE

    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    LPAREN  shift, and go to state 43

    id          go to state 45
    expression  go to state 88
    var         go to state 53
    simpl_exp   go to state 54
    addi_exp    go to state 55
    term        go to state 56
    factor      go to state 57
    call        go to state 58


state 66

   29 exp_stmt: expression SEMI .

    $default  reduce using rule 29 (exp_stmt)


state 67

   36 expression: var ASSIGN . expression

    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    LPAREN  shift, and go to state 43

    id          go to state 45
    expression  go to state 89
    var         go to state 53
    simpl_exp   go to state 54
    addi_exp    go to state 55
    term        go to state 56
    factor      go to state 57
    call        go to state 58


state 68

   50 addop: PLUS .

    $default  reduce using rule 50 (addop)


state 69

   51 addop: MINUS .

    $default  reduce using rule 51 (addop)


state 70

   46 relop: EQ .

    $default  reduce using rule 46 (relop)


state 71

   47 relop: NE .

    $default  reduce using rule 47 (relop)


state 72

   43 relop: LT .

    $default  reduce using rule 43 (relop)


state 73

   42 relop: LE .

    $default  reduce using rule 42 (relop)


state 74

   44 relop: GT .

    $default  reduce using rule 44 (relop)


state 75

   45 relop: GE .

    $default  reduce using rule 45 (relop)


state 76

   40 simpl_exp: addi_exp relop . addi_exp

    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    LPAREN  shift, and go to state 43

    id        go to state 45
    var       go to state 90
    addi_exp  go to state 91
    term      go to state 56
    factor    go to state 57
    call      go to state 58


state 77

   48 addi_exp: addi_exp addop . term

    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    LPAREN  shift, and go to state 43

    id      go to state 45
    var     go to state 90
    term    go to state 92
    factor  go to state 57
    call    go to state 58


state 78

   54 mulop: TIMES .

    $default  reduce using rule 54 (mulop)


state 79

   55 mulop: OVER .

    $default  reduce using rule 55 (mulop)


state 80

   52 term: term mulop . factor

    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    LPAREN  shift, and go to state 43

    id      go to state 45
    var     go to state 90
    factor  go to state 93
    call    go to state 58


state 81

   31 selec_stmt: IF LPAREN expression . RPAREN stmt
   32           | IF LPAREN expression . RPAREN stmt ELSE stmt

    RPAREN  shift, and go to state 94


state 82

   33 iter_stmt: WHILE LPAREN expression . RPAREN stmt

    RPAREN  shift, and go to state 95


state 83

   35 return_stmt: RETURN expression SEMI .

    $default  reduce using rule 35 (return_stmt)


state 84

   56 factor: LPAREN expression RPAREN .

    $default  reduce using rule 56 (factor)


state 85

   64 arg_list: expression .

    $default  reduce using rule 64 (arg_list)


state 86

   60 call: id LPAREN args . RPAREN

    RPAREN  shift, and go to state 96


state 87

   61 args: arg_list .
   63 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 97

    $default  reduce using rule 61 (args)


state 88

   39 var: id LBRACE expression . RBRACE

    RBRACE  shift, and go to state 98


state 89

   36 expression: var ASSIGN expression .

    $default  reduce using rule 36 (expression)


state 90

   57 factor: var .

    $default  reduce using rule 57 (factor)


state 91

   40 simpl_exp: addi_exp relop addi_exp .
   48 addi_exp: addi_exp . addop term

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 40 (simpl_exp)

    addop  go to state 77


state 92

   48 addi_exp: addi_exp addop term .
   52 term: term . mulop factor

    TIMES  shift, and go to state 78
    OVER   shift, and go to state 79

    $default  reduce using rule 48 (addi_exp)

    mulop  go to state 80


state 93

   52 term: term mulop factor .

    $default  reduce using rule 52 (term)


state 94

   31 selec_stmt: IF LPAREN expression RPAREN . stmt
   32           | IF LPAREN expression RPAREN . stmt ELSE stmt

    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    SEMI    shift, and go to state 42
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 28

    id           go to state 45
    comp_stmt    go to state 46
    stmt         go to state 99
    exp_stmt     go to state 48
    selec_stmt   go to state 49
    iter_stmt    go to state 50
    return_stmt  go to state 51
    expression   go to state 52
    var          go to state 53
    simpl_exp    go to state 54
    addi_exp     go to state 55
    term         go to state 56
    factor       go to state 57
    call         go to state 58


state 95

   33 iter_stmt: WHILE LPAREN expression RPAREN . stmt

    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    SEMI    shift, and go to state 42
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 28

    id           go to state 45
    comp_stmt    go to state 46
    stmt         go to state 100
    exp_stmt     go to state 48
    selec_stmt   go to state 49
    iter_stmt    go to state 50
    return_stmt  go to state 51
    expression   go to state 52
    var          go to state 53
    simpl_exp    go to state 54
    addi_exp     go to state 55
    term         go to state 56
    factor       go to state 57
    call         go to state 58


state 96

   60 call: id LPAREN args RPAREN .

    $default  reduce using rule 60 (call)


state 97

   63 arg_list: arg_list COMMA . expression

    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    LPAREN  shift, and go to state 43

    id          go to state 45
    expression  go to state 101
    var         go to state 53
    simpl_exp   go to state 54
    addi_exp    go to state 55
    term        go to state 56
    factor      go to state 57
    call        go to state 58


state 98

   39 var: id LBRACE expression RBRACE .

    $default  reduce using rule 39 (var)


state 99

   31 selec_stmt: IF LPAREN expression RPAREN stmt .
   32           | IF LPAREN expression RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 102

    $default  reduce using rule 31 (selec_stmt)


state 100

   33 iter_stmt: WHILE LPAREN expression RPAREN stmt .

    $default  reduce using rule 33 (iter_stmt)


state 101

   63 arg_list: arg_list COMMA expression .

    $default  reduce using rule 63 (arg_list)


state 102

   32 selec_stmt: IF LPAREN expression RPAREN stmt ELSE . stmt

    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 41
    SEMI    shift, and go to state 42
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 28

    id           go to state 45
    comp_stmt    go to state 46
    stmt         go to state 103
    exp_stmt     go to state 48
    selec_stmt   go to state 49
    iter_stmt    go to state 50
    return_stmt  go to state 51
    expression   go to state 52
    var          go to state 53
    simpl_exp    go to state 54
    addi_exp     go to state 55
    term         go to state 56
    factor       go to state 57
    call         go to state 58


state 103

   32 selec_stmt: IF LPAREN expression RPAREN stmt ELSE stmt .

    $default  reduce using rule 32 (selec_stmt)
